version: '3.4'

services:
  command:
    image: elgusbi/subscription-command
    user: root
    container_name: command
    build:
      context: ./
      dockerfile: ./SubscriptionCommand/Dockerfile
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__ApplicationDatabase=Server=Subscription,1433;Database=commandDb;User ID=sa;Password=Pa$$Word111;Encrypt=False;
    ports:
      - "8001:8080"
      - "8002:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - my-network
    restart: always
  query:
    image: elgusbi/subscription-query
    user: root
    container_name: query
    build:
      context: ./SubscriptionQuery/
      dockerfile: ./SubscriptionQuery/Dockerfile
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__ApplicationDatabase=Server=Subscription,1433;Database=QueryDb;User ID=sa;Password=Pa$$Word111;Encrypt=False;
    ports:
      - "8003:8080"
      - "8004:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - my-network
    restart: always
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    container_name: Subscription
    volumes:
      - db_data:/var/opt/mssql/data
    environment:
      MSSQL_SA_PASSWORD: "Pa$$Word111"
      ACCEPT_EULA: "Y"
      # MSSQL_PID: "Express"
    ports:
      - "1441:1433"
    networks:
      - my-network
    restart: unless-stopped ## UnlessStopped  

volumes:
  db_data:

networks:
  my-network:
